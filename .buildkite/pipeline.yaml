configs:
  environments:
    - &main_agent_queue
      agents:
        queue: default

  pipelines:
    # trigger after merge code to main branch
    - &main_pipeline
      if: |
        build.branch == "main"
    
    # trigger on feature branches pull requests to main branch.
    - &feature_pipeline_main
      if: |
        build.pull_request.base_branch == "main"

    # trigger on feature branches
    - &feature_pipeline
      if: |
        build.branch != "main" && build.pull_request.base_branch != "main"
    
steps:
###############################################################
# Terraform execution - PLAN in main (on feature branches) #
###############################################################

  - label: Terraform_PLAN_security-groups_main_Feature
    <<: *main_agent_queue
    <<: *feature_pipeline
    command: ".buildkite/scripts/pipeline.sh"
    env:
      TERRAFORM_ROOT_MODULE: "hirer-main"
      TERRAFORM_WORKSPACE: "hirer-main"
      TERRAFORM_COMMAND: "plan-buildkite"


##############################################################################
# Terraform execution - PLAN in main (on Pull requests to main branch) #
##############################################################################
  - label: Delay_10_seconds
    <<: *main_agent_queue
    <<: *feature_pipeline_main
    commands: 
      - "sleep 10"
      
  - wait:
    <<: *feature_pipeline_main

  - label: Terraform_PLAN_security-groups_main
    <<: *main_agent_queue
    <<: *feature_pipeline_main
    command: ".buildkite/scripts/pipeline.sh"
    env:
      TERRAFORM_ROOT_MODULE: "hirer-main"
      TERRAFORM_WORKSPACE: "hirer-main"
      TERRAFORM_COMMAND: "plan-buildkite"
 
  - block: ":rocket: Approve Terraform plan?"
    <<: *feature_pipeline_main
    prompt: "Approve Terraform Plan?"
    blocked_state: running

  - label: Shell_output
    <<: *main_agent_queue
    <<: *feature_pipeline_main
    commands:
      - echo "Pipeline run finished"

##########################################################################
# Terraform execution - APPLY in main (after merge to main branch) #
##########################################################################
  - label: Terraform_APPLY_main
    <<: *main_agent_queue
    <<: *main_pipeline
    command: ".buildkite/scripts/pipeline.sh"
    env:
      TERRAFORM_ROOT_MODULE: "hirer-main"
      TERRAFORM_WORKSPACE: "hirer-main"
      TERRAFORM_COMMAND: "applyAuto-buildkite"

  - wait:
    <<: *main_pipeline

  - label: Terraform_APPLY_main
    <<: *main_agent_queue
    <<: *main_pipeline
    command: ".buildkite/scripts/pipeline.sh"
    env:
      TERRAFORM_ROOT_MODULE: "hirer-main"
      TERRAFORM_WORKSPACE: "hirer-main"
      TERRAFORM_COMMAND: "applyAuto-buildkite"


##########################################
# SEND NOTIFICATIONS ON BUILD COMPLETION #
##########################################
notify:
  - email: "vvoelk@cmd.com.au"
    if: build.branch == "main" && build.state == "passed"
  - slack:
      message: 'ðŸš€ TERRAFORM IaC successfully deployed to main.'
      channels:
        - '#hirer-main-terraform'
    if: build.branch == "main" && build.state == "passed"
  - slack:
      message: '!!! ERROR !!! Buildkite deployment has failed!'
      channels:
        - '#hirer-main-terraform'
    if: build.state == "failed"
